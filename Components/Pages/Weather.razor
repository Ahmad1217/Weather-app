@page "/weather"

<h1>Live Weather Updates</h1>

<p>Stay informed with the latest weather conditions.</p>

@if (forecasts == null)

{
    <p><em>Gathering weather insights...</em></p>
}

else

{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp (°C)</th>
                <th>Temp (°F)</th>
                <th>Humidity (%)</th>
                <th>Conditions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)

            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Humidity</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;



    protected override async Task OnInitializedAsync()

    {

        await Task.Delay(500);



        var startDate = DateOnly.FromDateTime(DateTime.Now);

        var summaries = new[] { "Freezing", "Chilly", "Cool", "Warm", "Hot", "Scorching" };

        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast

            {

                Date = startDate.AddDays(index),

                TemperatureC = Random.Shared.Next(-10, 40),

                Humidity = Random.Shared.Next(30, 80),

                Summary = summaries[Random.Shared.Next(summaries.Length)]

            }).ToArray();

    }



    private class WeatherForecast

    {

        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);

        public int Humidity { get; set; }

    }
}
